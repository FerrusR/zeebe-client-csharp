// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: gateway.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace GatewayProtocol {
  public static partial class Gateway
  {
    static readonly string __ServiceName = "gateway_protocol.Gateway";

    static readonly grpc::Marshaller<global::GatewayProtocol.TopologyRequest> __Marshaller_gateway_protocol_TopologyRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GatewayProtocol.TopologyRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GatewayProtocol.TopologyResponse> __Marshaller_gateway_protocol_TopologyResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GatewayProtocol.TopologyResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GatewayProtocol.DeployWorkflowRequest> __Marshaller_gateway_protocol_DeployWorkflowRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GatewayProtocol.DeployWorkflowRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GatewayProtocol.DeployWorkflowResponse> __Marshaller_gateway_protocol_DeployWorkflowResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GatewayProtocol.DeployWorkflowResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GatewayProtocol.PublishMessageRequest> __Marshaller_gateway_protocol_PublishMessageRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GatewayProtocol.PublishMessageRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GatewayProtocol.PublishMessageResponse> __Marshaller_gateway_protocol_PublishMessageResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GatewayProtocol.PublishMessageResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GatewayProtocol.UpdateJobRetriesRequest> __Marshaller_gateway_protocol_UpdateJobRetriesRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GatewayProtocol.UpdateJobRetriesRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GatewayProtocol.UpdateJobRetriesResponse> __Marshaller_gateway_protocol_UpdateJobRetriesResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GatewayProtocol.UpdateJobRetriesResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GatewayProtocol.FailJobRequest> __Marshaller_gateway_protocol_FailJobRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GatewayProtocol.FailJobRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GatewayProtocol.FailJobResponse> __Marshaller_gateway_protocol_FailJobResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GatewayProtocol.FailJobResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GatewayProtocol.CompleteJobRequest> __Marshaller_gateway_protocol_CompleteJobRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GatewayProtocol.CompleteJobRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GatewayProtocol.CompleteJobResponse> __Marshaller_gateway_protocol_CompleteJobResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GatewayProtocol.CompleteJobResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GatewayProtocol.CreateWorkflowInstanceRequest> __Marshaller_gateway_protocol_CreateWorkflowInstanceRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GatewayProtocol.CreateWorkflowInstanceRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GatewayProtocol.CreateWorkflowInstanceResponse> __Marshaller_gateway_protocol_CreateWorkflowInstanceResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GatewayProtocol.CreateWorkflowInstanceResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GatewayProtocol.CancelWorkflowInstanceRequest> __Marshaller_gateway_protocol_CancelWorkflowInstanceRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GatewayProtocol.CancelWorkflowInstanceRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GatewayProtocol.CancelWorkflowInstanceResponse> __Marshaller_gateway_protocol_CancelWorkflowInstanceResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GatewayProtocol.CancelWorkflowInstanceResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GatewayProtocol.UpdateWorkflowInstancePayloadRequest> __Marshaller_gateway_protocol_UpdateWorkflowInstancePayloadRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GatewayProtocol.UpdateWorkflowInstancePayloadRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GatewayProtocol.UpdateWorkflowInstancePayloadResponse> __Marshaller_gateway_protocol_UpdateWorkflowInstancePayloadResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GatewayProtocol.UpdateWorkflowInstancePayloadResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GatewayProtocol.ActivateJobsRequest> __Marshaller_gateway_protocol_ActivateJobsRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GatewayProtocol.ActivateJobsRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GatewayProtocol.ActivateJobsResponse> __Marshaller_gateway_protocol_ActivateJobsResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GatewayProtocol.ActivateJobsResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GatewayProtocol.ListWorkflowsRequest> __Marshaller_gateway_protocol_ListWorkflowsRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GatewayProtocol.ListWorkflowsRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GatewayProtocol.ListWorkflowsResponse> __Marshaller_gateway_protocol_ListWorkflowsResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GatewayProtocol.ListWorkflowsResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GatewayProtocol.GetWorkflowRequest> __Marshaller_gateway_protocol_GetWorkflowRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GatewayProtocol.GetWorkflowRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GatewayProtocol.GetWorkflowResponse> __Marshaller_gateway_protocol_GetWorkflowResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GatewayProtocol.GetWorkflowResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GatewayProtocol.ResolveIncidentRequest> __Marshaller_gateway_protocol_ResolveIncidentRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GatewayProtocol.ResolveIncidentRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GatewayProtocol.ResolveIncidentResponse> __Marshaller_gateway_protocol_ResolveIncidentResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GatewayProtocol.ResolveIncidentResponse.Parser.ParseFrom);

    static readonly grpc::Method<global::GatewayProtocol.TopologyRequest, global::GatewayProtocol.TopologyResponse> __Method_Topology = new grpc::Method<global::GatewayProtocol.TopologyRequest, global::GatewayProtocol.TopologyResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Topology",
        __Marshaller_gateway_protocol_TopologyRequest,
        __Marshaller_gateway_protocol_TopologyResponse);

    static readonly grpc::Method<global::GatewayProtocol.DeployWorkflowRequest, global::GatewayProtocol.DeployWorkflowResponse> __Method_DeployWorkflow = new grpc::Method<global::GatewayProtocol.DeployWorkflowRequest, global::GatewayProtocol.DeployWorkflowResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeployWorkflow",
        __Marshaller_gateway_protocol_DeployWorkflowRequest,
        __Marshaller_gateway_protocol_DeployWorkflowResponse);

    static readonly grpc::Method<global::GatewayProtocol.PublishMessageRequest, global::GatewayProtocol.PublishMessageResponse> __Method_PublishMessage = new grpc::Method<global::GatewayProtocol.PublishMessageRequest, global::GatewayProtocol.PublishMessageResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "PublishMessage",
        __Marshaller_gateway_protocol_PublishMessageRequest,
        __Marshaller_gateway_protocol_PublishMessageResponse);

    static readonly grpc::Method<global::GatewayProtocol.UpdateJobRetriesRequest, global::GatewayProtocol.UpdateJobRetriesResponse> __Method_UpdateJobRetries = new grpc::Method<global::GatewayProtocol.UpdateJobRetriesRequest, global::GatewayProtocol.UpdateJobRetriesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateJobRetries",
        __Marshaller_gateway_protocol_UpdateJobRetriesRequest,
        __Marshaller_gateway_protocol_UpdateJobRetriesResponse);

    static readonly grpc::Method<global::GatewayProtocol.FailJobRequest, global::GatewayProtocol.FailJobResponse> __Method_FailJob = new grpc::Method<global::GatewayProtocol.FailJobRequest, global::GatewayProtocol.FailJobResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "FailJob",
        __Marshaller_gateway_protocol_FailJobRequest,
        __Marshaller_gateway_protocol_FailJobResponse);

    static readonly grpc::Method<global::GatewayProtocol.CompleteJobRequest, global::GatewayProtocol.CompleteJobResponse> __Method_CompleteJob = new grpc::Method<global::GatewayProtocol.CompleteJobRequest, global::GatewayProtocol.CompleteJobResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CompleteJob",
        __Marshaller_gateway_protocol_CompleteJobRequest,
        __Marshaller_gateway_protocol_CompleteJobResponse);

    static readonly grpc::Method<global::GatewayProtocol.CreateWorkflowInstanceRequest, global::GatewayProtocol.CreateWorkflowInstanceResponse> __Method_CreateWorkflowInstance = new grpc::Method<global::GatewayProtocol.CreateWorkflowInstanceRequest, global::GatewayProtocol.CreateWorkflowInstanceResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateWorkflowInstance",
        __Marshaller_gateway_protocol_CreateWorkflowInstanceRequest,
        __Marshaller_gateway_protocol_CreateWorkflowInstanceResponse);

    static readonly grpc::Method<global::GatewayProtocol.CancelWorkflowInstanceRequest, global::GatewayProtocol.CancelWorkflowInstanceResponse> __Method_CancelWorkflowInstance = new grpc::Method<global::GatewayProtocol.CancelWorkflowInstanceRequest, global::GatewayProtocol.CancelWorkflowInstanceResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CancelWorkflowInstance",
        __Marshaller_gateway_protocol_CancelWorkflowInstanceRequest,
        __Marshaller_gateway_protocol_CancelWorkflowInstanceResponse);

    static readonly grpc::Method<global::GatewayProtocol.UpdateWorkflowInstancePayloadRequest, global::GatewayProtocol.UpdateWorkflowInstancePayloadResponse> __Method_UpdateWorkflowInstancePayload = new grpc::Method<global::GatewayProtocol.UpdateWorkflowInstancePayloadRequest, global::GatewayProtocol.UpdateWorkflowInstancePayloadResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateWorkflowInstancePayload",
        __Marshaller_gateway_protocol_UpdateWorkflowInstancePayloadRequest,
        __Marshaller_gateway_protocol_UpdateWorkflowInstancePayloadResponse);

    static readonly grpc::Method<global::GatewayProtocol.ActivateJobsRequest, global::GatewayProtocol.ActivateJobsResponse> __Method_ActivateJobs = new grpc::Method<global::GatewayProtocol.ActivateJobsRequest, global::GatewayProtocol.ActivateJobsResponse>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "ActivateJobs",
        __Marshaller_gateway_protocol_ActivateJobsRequest,
        __Marshaller_gateway_protocol_ActivateJobsResponse);

    static readonly grpc::Method<global::GatewayProtocol.ListWorkflowsRequest, global::GatewayProtocol.ListWorkflowsResponse> __Method_ListWorkflows = new grpc::Method<global::GatewayProtocol.ListWorkflowsRequest, global::GatewayProtocol.ListWorkflowsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListWorkflows",
        __Marshaller_gateway_protocol_ListWorkflowsRequest,
        __Marshaller_gateway_protocol_ListWorkflowsResponse);

    static readonly grpc::Method<global::GatewayProtocol.GetWorkflowRequest, global::GatewayProtocol.GetWorkflowResponse> __Method_GetWorkflow = new grpc::Method<global::GatewayProtocol.GetWorkflowRequest, global::GatewayProtocol.GetWorkflowResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetWorkflow",
        __Marshaller_gateway_protocol_GetWorkflowRequest,
        __Marshaller_gateway_protocol_GetWorkflowResponse);

    static readonly grpc::Method<global::GatewayProtocol.ResolveIncidentRequest, global::GatewayProtocol.ResolveIncidentResponse> __Method_ResolveIncident = new grpc::Method<global::GatewayProtocol.ResolveIncidentRequest, global::GatewayProtocol.ResolveIncidentResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ResolveIncident",
        __Marshaller_gateway_protocol_ResolveIncidentRequest,
        __Marshaller_gateway_protocol_ResolveIncidentResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::GatewayProtocol.GatewayReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of Gateway</summary>
    public abstract partial class GatewayBase
    {
      public virtual global::System.Threading.Tasks.Task<global::GatewayProtocol.TopologyResponse> Topology(global::GatewayProtocol.TopologyRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::GatewayProtocol.DeployWorkflowResponse> DeployWorkflow(global::GatewayProtocol.DeployWorkflowRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::GatewayProtocol.PublishMessageResponse> PublishMessage(global::GatewayProtocol.PublishMessageRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::GatewayProtocol.UpdateJobRetriesResponse> UpdateJobRetries(global::GatewayProtocol.UpdateJobRetriesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::GatewayProtocol.FailJobResponse> FailJob(global::GatewayProtocol.FailJobRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::GatewayProtocol.CompleteJobResponse> CompleteJob(global::GatewayProtocol.CompleteJobRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::GatewayProtocol.CreateWorkflowInstanceResponse> CreateWorkflowInstance(global::GatewayProtocol.CreateWorkflowInstanceRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::GatewayProtocol.CancelWorkflowInstanceResponse> CancelWorkflowInstance(global::GatewayProtocol.CancelWorkflowInstanceRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::GatewayProtocol.UpdateWorkflowInstancePayloadResponse> UpdateWorkflowInstancePayload(global::GatewayProtocol.UpdateWorkflowInstancePayloadRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task ActivateJobs(global::GatewayProtocol.ActivateJobsRequest request, grpc::IServerStreamWriter<global::GatewayProtocol.ActivateJobsResponse> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::GatewayProtocol.ListWorkflowsResponse> ListWorkflows(global::GatewayProtocol.ListWorkflowsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::GatewayProtocol.GetWorkflowResponse> GetWorkflow(global::GatewayProtocol.GetWorkflowRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::GatewayProtocol.ResolveIncidentResponse> ResolveIncident(global::GatewayProtocol.ResolveIncidentRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for Gateway</summary>
    public partial class GatewayClient : grpc::ClientBase<GatewayClient>
    {
      /// <summary>Creates a new client for Gateway</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public GatewayClient(grpc::Channel channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for Gateway that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public GatewayClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected GatewayClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected GatewayClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual global::GatewayProtocol.TopologyResponse Topology(global::GatewayProtocol.TopologyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Topology(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::GatewayProtocol.TopologyResponse Topology(global::GatewayProtocol.TopologyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Topology, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::GatewayProtocol.TopologyResponse> TopologyAsync(global::GatewayProtocol.TopologyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return TopologyAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::GatewayProtocol.TopologyResponse> TopologyAsync(global::GatewayProtocol.TopologyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Topology, null, options, request);
      }
      public virtual global::GatewayProtocol.DeployWorkflowResponse DeployWorkflow(global::GatewayProtocol.DeployWorkflowRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeployWorkflow(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::GatewayProtocol.DeployWorkflowResponse DeployWorkflow(global::GatewayProtocol.DeployWorkflowRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeployWorkflow, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::GatewayProtocol.DeployWorkflowResponse> DeployWorkflowAsync(global::GatewayProtocol.DeployWorkflowRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeployWorkflowAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::GatewayProtocol.DeployWorkflowResponse> DeployWorkflowAsync(global::GatewayProtocol.DeployWorkflowRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeployWorkflow, null, options, request);
      }
      public virtual global::GatewayProtocol.PublishMessageResponse PublishMessage(global::GatewayProtocol.PublishMessageRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return PublishMessage(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::GatewayProtocol.PublishMessageResponse PublishMessage(global::GatewayProtocol.PublishMessageRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_PublishMessage, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::GatewayProtocol.PublishMessageResponse> PublishMessageAsync(global::GatewayProtocol.PublishMessageRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return PublishMessageAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::GatewayProtocol.PublishMessageResponse> PublishMessageAsync(global::GatewayProtocol.PublishMessageRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_PublishMessage, null, options, request);
      }
      public virtual global::GatewayProtocol.UpdateJobRetriesResponse UpdateJobRetries(global::GatewayProtocol.UpdateJobRetriesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateJobRetries(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::GatewayProtocol.UpdateJobRetriesResponse UpdateJobRetries(global::GatewayProtocol.UpdateJobRetriesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateJobRetries, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::GatewayProtocol.UpdateJobRetriesResponse> UpdateJobRetriesAsync(global::GatewayProtocol.UpdateJobRetriesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateJobRetriesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::GatewayProtocol.UpdateJobRetriesResponse> UpdateJobRetriesAsync(global::GatewayProtocol.UpdateJobRetriesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateJobRetries, null, options, request);
      }
      public virtual global::GatewayProtocol.FailJobResponse FailJob(global::GatewayProtocol.FailJobRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return FailJob(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::GatewayProtocol.FailJobResponse FailJob(global::GatewayProtocol.FailJobRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_FailJob, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::GatewayProtocol.FailJobResponse> FailJobAsync(global::GatewayProtocol.FailJobRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return FailJobAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::GatewayProtocol.FailJobResponse> FailJobAsync(global::GatewayProtocol.FailJobRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_FailJob, null, options, request);
      }
      public virtual global::GatewayProtocol.CompleteJobResponse CompleteJob(global::GatewayProtocol.CompleteJobRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CompleteJob(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::GatewayProtocol.CompleteJobResponse CompleteJob(global::GatewayProtocol.CompleteJobRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CompleteJob, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::GatewayProtocol.CompleteJobResponse> CompleteJobAsync(global::GatewayProtocol.CompleteJobRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CompleteJobAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::GatewayProtocol.CompleteJobResponse> CompleteJobAsync(global::GatewayProtocol.CompleteJobRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CompleteJob, null, options, request);
      }
      public virtual global::GatewayProtocol.CreateWorkflowInstanceResponse CreateWorkflowInstance(global::GatewayProtocol.CreateWorkflowInstanceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateWorkflowInstance(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::GatewayProtocol.CreateWorkflowInstanceResponse CreateWorkflowInstance(global::GatewayProtocol.CreateWorkflowInstanceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateWorkflowInstance, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::GatewayProtocol.CreateWorkflowInstanceResponse> CreateWorkflowInstanceAsync(global::GatewayProtocol.CreateWorkflowInstanceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateWorkflowInstanceAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::GatewayProtocol.CreateWorkflowInstanceResponse> CreateWorkflowInstanceAsync(global::GatewayProtocol.CreateWorkflowInstanceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateWorkflowInstance, null, options, request);
      }
      public virtual global::GatewayProtocol.CancelWorkflowInstanceResponse CancelWorkflowInstance(global::GatewayProtocol.CancelWorkflowInstanceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CancelWorkflowInstance(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::GatewayProtocol.CancelWorkflowInstanceResponse CancelWorkflowInstance(global::GatewayProtocol.CancelWorkflowInstanceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CancelWorkflowInstance, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::GatewayProtocol.CancelWorkflowInstanceResponse> CancelWorkflowInstanceAsync(global::GatewayProtocol.CancelWorkflowInstanceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CancelWorkflowInstanceAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::GatewayProtocol.CancelWorkflowInstanceResponse> CancelWorkflowInstanceAsync(global::GatewayProtocol.CancelWorkflowInstanceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CancelWorkflowInstance, null, options, request);
      }
      public virtual global::GatewayProtocol.UpdateWorkflowInstancePayloadResponse UpdateWorkflowInstancePayload(global::GatewayProtocol.UpdateWorkflowInstancePayloadRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateWorkflowInstancePayload(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::GatewayProtocol.UpdateWorkflowInstancePayloadResponse UpdateWorkflowInstancePayload(global::GatewayProtocol.UpdateWorkflowInstancePayloadRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateWorkflowInstancePayload, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::GatewayProtocol.UpdateWorkflowInstancePayloadResponse> UpdateWorkflowInstancePayloadAsync(global::GatewayProtocol.UpdateWorkflowInstancePayloadRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateWorkflowInstancePayloadAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::GatewayProtocol.UpdateWorkflowInstancePayloadResponse> UpdateWorkflowInstancePayloadAsync(global::GatewayProtocol.UpdateWorkflowInstancePayloadRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateWorkflowInstancePayload, null, options, request);
      }
      public virtual grpc::AsyncServerStreamingCall<global::GatewayProtocol.ActivateJobsResponse> ActivateJobs(global::GatewayProtocol.ActivateJobsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ActivateJobs(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncServerStreamingCall<global::GatewayProtocol.ActivateJobsResponse> ActivateJobs(global::GatewayProtocol.ActivateJobsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_ActivateJobs, null, options, request);
      }
      public virtual global::GatewayProtocol.ListWorkflowsResponse ListWorkflows(global::GatewayProtocol.ListWorkflowsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListWorkflows(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::GatewayProtocol.ListWorkflowsResponse ListWorkflows(global::GatewayProtocol.ListWorkflowsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListWorkflows, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::GatewayProtocol.ListWorkflowsResponse> ListWorkflowsAsync(global::GatewayProtocol.ListWorkflowsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListWorkflowsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::GatewayProtocol.ListWorkflowsResponse> ListWorkflowsAsync(global::GatewayProtocol.ListWorkflowsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListWorkflows, null, options, request);
      }
      public virtual global::GatewayProtocol.GetWorkflowResponse GetWorkflow(global::GatewayProtocol.GetWorkflowRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetWorkflow(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::GatewayProtocol.GetWorkflowResponse GetWorkflow(global::GatewayProtocol.GetWorkflowRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetWorkflow, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::GatewayProtocol.GetWorkflowResponse> GetWorkflowAsync(global::GatewayProtocol.GetWorkflowRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetWorkflowAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::GatewayProtocol.GetWorkflowResponse> GetWorkflowAsync(global::GatewayProtocol.GetWorkflowRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetWorkflow, null, options, request);
      }
      public virtual global::GatewayProtocol.ResolveIncidentResponse ResolveIncident(global::GatewayProtocol.ResolveIncidentRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ResolveIncident(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::GatewayProtocol.ResolveIncidentResponse ResolveIncident(global::GatewayProtocol.ResolveIncidentRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ResolveIncident, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::GatewayProtocol.ResolveIncidentResponse> ResolveIncidentAsync(global::GatewayProtocol.ResolveIncidentRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ResolveIncidentAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::GatewayProtocol.ResolveIncidentResponse> ResolveIncidentAsync(global::GatewayProtocol.ResolveIncidentRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ResolveIncident, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override GatewayClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new GatewayClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(GatewayBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_Topology, serviceImpl.Topology)
          .AddMethod(__Method_DeployWorkflow, serviceImpl.DeployWorkflow)
          .AddMethod(__Method_PublishMessage, serviceImpl.PublishMessage)
          .AddMethod(__Method_UpdateJobRetries, serviceImpl.UpdateJobRetries)
          .AddMethod(__Method_FailJob, serviceImpl.FailJob)
          .AddMethod(__Method_CompleteJob, serviceImpl.CompleteJob)
          .AddMethod(__Method_CreateWorkflowInstance, serviceImpl.CreateWorkflowInstance)
          .AddMethod(__Method_CancelWorkflowInstance, serviceImpl.CancelWorkflowInstance)
          .AddMethod(__Method_UpdateWorkflowInstancePayload, serviceImpl.UpdateWorkflowInstancePayload)
          .AddMethod(__Method_ActivateJobs, serviceImpl.ActivateJobs)
          .AddMethod(__Method_ListWorkflows, serviceImpl.ListWorkflows)
          .AddMethod(__Method_GetWorkflow, serviceImpl.GetWorkflow)
          .AddMethod(__Method_ResolveIncident, serviceImpl.ResolveIncident).Build();
    }

  }
}
#endregion
